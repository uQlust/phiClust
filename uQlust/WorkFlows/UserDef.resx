<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARhSURBVEhLtZV7TJV1HMZP4tqcP8OD1rG8DK3NSTatTJ0bZlqmpTYrSy215eYUlaN5DNBUElFY
        Yhg4NW0WRhd1ZeUlHXkLFa+YKBAMYRAeObf33G9cPn0P0bLyH7fjs7377f3jfZ7n/Xy/e1/d3Uitc6Iy
        NTpuoyuV6aLrBiuxa5uiH6CWacStsfB6kYtB2x3RDVBpLu5bZCb3RojPGlswfGSLXoBa4URnusVWMbeE
        IK00QPdMa3QCVKqLmLQmttWFcQeh1tPGvBI/yhSFGajVLjqvslDQEMYRgKvWFg4KnsUXAsRvc6D/0E7P
        HAc9sux0X29Dny7DX2khVsK7LTGjjGYeel/OmXX/L6PSPe3bsr+pGU2alzS1kHE9hOlKkJTSEPnV4XZk
        WRVBVl8LYir1s/CinzklXt444WVqkYfJRV4GFQqBFy//O0BleOm20e4vsraiSfOI+frrYdKuhFh6Mcji
        8wEOyFuV21opbgpzvDHEofoQ+2qDFFQHyK8IkFvpY+4ZD/EFbmLGl/4ToDZ4icu1t520/2V+RsyzysOk
        i3n6b0GWXw4y76yfpNNyyTnrlIdpx7y8dMTN8wdcJO538dRejSGFGv12ODBscRIzoSNAbfLTd4fGBVcb
        Vj/SroXsijDrBM2aqyFSxTz5XIB3z/iZccLH5CNexh7wMOYHNyP2unlScCTs1nhUPPptsfNIvp2H8+x0
        GicB6hMPw/e5qPLBLQ+cNLewsaJZAkKsuxbiA2m/7GKA+dL6nV/9TD8unI96eeGgmzE/uRm118Wwr5w8
        XqDx2E4H/SLm+Q5ZAhudnj0nAR97eLPER60XKh2tbK0W88ow2e3tZbAd7edK+7dO+njtFy9TjngYe8hN
        4ncunvnWxZAvNQZ9odF/m50+0tyw2U5ctoWYxNMdiLI9JArHU9Y2dtc1kynNM8oETWkQY0f72af8TJP2
        U456GC/tRwuekdJ+qLRPEPNI+76Cp1eulR4b7XRdbUY3uvi2IcvuD/1ao7ChhbyqZlZcEjSXAiwoEfaC
        ZqawnypDnXjYx7jDXkbtdzNsj5uEQjcDdznp/6mTXoLGsMlObI5Gl9Q/0I26LSAitUpj8OcOttaEybgW
        ZsHZAPMETXv7Ih+vHPa0sx/9vXD/RgoJmoG7NAZs70CTY0WfZeGBDTbuf68G3Yj/BESkUuWBLTbWypBT
        ZIPeFvOZxQEm/uhkZN7vjMit4mk5n8grY+DmSgZk1tBnVTk9U8uJM5XR1VhGl6QydIur0D13h4CI1HI7
        vbNuseiyn0XnQ7x6LMCkn90MzanGkFTWGr+mkfhUM32N9fQ21WBIqedBUz365Fr0SXWoyDWnEjWh8s4B
        ESmjDUPGTWYV+5h9NsgkGe7gnEbUEmkWLSmjME25ycvybZleEmTwZjOxS29ELyAildyESm5gvGzQ8D12
        9AsaohsQkZpvRr+kkYSdFgwrZb/vhdRCC51nVNPdeA/e4G8p+TerpJt3EaDT/QmrFoFl1iPjawAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>